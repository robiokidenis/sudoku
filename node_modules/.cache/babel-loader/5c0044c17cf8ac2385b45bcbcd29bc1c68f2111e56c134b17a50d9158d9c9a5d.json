{"ast":null,"code":"import _slicedToArray from\"/Users/robiokidenis/Projects/Game/sudoku-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{useSudokuContext}from'../context/SudokuContext';import moment from'moment';/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */import{jsx as _jsx}from\"react/jsx-runtime\";export var Timer=function Timer(){var _useState=useState(moment()),_useState2=_slicedToArray(_useState,2),currentTime=_useState2[0],setCurrentTime=_useState2[1];var _useSudokuContext=useSudokuContext(),timeGameStarted=_useSudokuContext.timeGameStarted,won=_useSudokuContext.won;useEffect(function(){if(!won)setTimeout(function(){return tick();},1000);});function tick(){setCurrentTime(moment());}function getTimer(){var secondsTotal=currentTime.diff(timeGameStarted,'seconds');if(secondsTotal<=0)return'00:00';var duration=moment.duration(secondsTotal,'seconds');var hours=duration.hours();var minutes=duration.minutes();var seconds=duration.seconds();var stringTimer='';stringTimer+=hours?''+hours+':':'';stringTimer+=minutes?(minutes<10?'0':'')+minutes+':':'00:';stringTimer+=seconds<10?'0'+seconds:seconds;return stringTimer;}return/*#__PURE__*/_jsx(\"div\",{className:\"status__time\",children:getTimer()});};","map":{"version":3,"names":["React","useState","useEffect","useSudokuContext","moment","Timer","currentTime","setCurrentTime","timeGameStarted","won","setTimeout","tick","getTimer","secondsTotal","diff","duration","hours","minutes","seconds","stringTimer"],"sources":["/Users/robiokidenis/Projects/Game/sudoku-react/src/components/Timer.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSudokuContext } from '../context/SudokuContext';\nimport moment from 'moment';\n\n/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */\nexport const Timer = () => {\n  let [currentTime, setCurrentTime] = useState(moment());\n  let { timeGameStarted, won } = useSudokuContext();\n\n  useEffect(() => {\n    if (!won)\n      setTimeout(() => tick(), 1000);\n  });\n\n  function tick() {\n    setCurrentTime(moment());\n  }\n\n  function getTimer() {\n    let secondsTotal = currentTime.diff(timeGameStarted, 'seconds');\n    if (secondsTotal <= 0)\n      return '00:00';\n    let duration = moment.duration(secondsTotal, 'seconds');\n    let hours = duration.hours();\n    let minutes = duration.minutes();\n    let seconds = duration.seconds();\n    let stringTimer = '';\n\n    stringTimer += hours ? '' + hours + ':' : '';\n    stringTimer += minutes ? (minutes < 10 ? '0' : '') + minutes + ':' : '00:';\n    stringTimer += seconds < 10 ? '0' + seconds : seconds;\n\n    return stringTimer;\n  }\n\n  return (\n    <div className=\"status__time\">{getTimer()}\n    </div>\n  )\n}\n"],"mappings":"oIAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,gBAAgB,KAAQ,0BAA0B,CAC3D,MAAOC,OAAM,KAAM,QAAQ,CAE3B;AACA;AACA;AACA,GAHA,2CAIA,MAAO,IAAMC,MAAK,CAAG,QAARA,MAAK,EAAS,CACzB,cAAoCJ,QAAQ,CAACG,MAAM,EAAE,CAAC,wCAAjDE,WAAW,eAAEC,cAAc,eAChC,sBAA+BJ,gBAAgB,EAAE,CAA3CK,eAAe,mBAAfA,eAAe,CAAEC,GAAG,mBAAHA,GAAG,CAE1BP,SAAS,CAAC,UAAM,CACd,GAAI,CAACO,GAAG,CACNC,UAAU,CAAC,iBAAMC,KAAI,EAAE,GAAE,IAAI,CAAC,CAClC,CAAC,CAAC,CAEF,QAASA,KAAI,EAAG,CACdJ,cAAc,CAACH,MAAM,EAAE,CAAC,CAC1B,CAEA,QAASQ,SAAQ,EAAG,CAClB,GAAIC,aAAY,CAAGP,WAAW,CAACQ,IAAI,CAACN,eAAe,CAAE,SAAS,CAAC,CAC/D,GAAIK,YAAY,EAAI,CAAC,CACnB,MAAO,OAAO,CAChB,GAAIE,SAAQ,CAAGX,MAAM,CAACW,QAAQ,CAACF,YAAY,CAAE,SAAS,CAAC,CACvD,GAAIG,MAAK,CAAGD,QAAQ,CAACC,KAAK,EAAE,CAC5B,GAAIC,QAAO,CAAGF,QAAQ,CAACE,OAAO,EAAE,CAChC,GAAIC,QAAO,CAAGH,QAAQ,CAACG,OAAO,EAAE,CAChC,GAAIC,YAAW,CAAG,EAAE,CAEpBA,WAAW,EAAIH,KAAK,CAAG,EAAE,CAAGA,KAAK,CAAG,GAAG,CAAG,EAAE,CAC5CG,WAAW,EAAIF,OAAO,CAAG,CAACA,OAAO,CAAG,EAAE,CAAG,GAAG,CAAG,EAAE,EAAIA,OAAO,CAAG,GAAG,CAAG,KAAK,CAC1EE,WAAW,EAAID,OAAO,CAAG,EAAE,CAAG,GAAG,CAAGA,OAAO,CAAGA,OAAO,CAErD,MAAOC,YAAW,CACpB,CAEA,mBACE,YAAK,SAAS,CAAC,cAAc,UAAEP,QAAQ,EAAE,EACnC,CAEV,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}