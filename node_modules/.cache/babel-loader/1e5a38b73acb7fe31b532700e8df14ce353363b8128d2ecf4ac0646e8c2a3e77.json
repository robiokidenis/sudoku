{"ast":null,"code":"var _jsxFileName = \"/Users/robiokidenis/Projects/Game/sudoku-react/src/context/SudokuContext.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState } from 'react';\nimport moment from 'moment';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SudokuContext = /*#__PURE__*/createContext({\n  numberSelected: '0',\n  setNumberSelected: () => {},\n  gameArray: [],\n  setGameArray: () => {},\n  difficulty: 'Easy',\n  setDifficulty: () => {},\n  timeGameStarted: moment(),\n  setTimeGameStarted: () => {},\n  fastMode: false,\n  setFastMode: () => {},\n  cellSelected: -1,\n  setCellSelected: () => {},\n  initArray: [],\n  setInitArray: () => {},\n  won: false,\n  setWon: () => {}\n});\nexport const SudokuProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  let [numberSelected, setNumberSelected] = useState('0');\n  let [gameArray, setGameArray] = useState([]);\n  let [difficulty, setDifficulty] = useState('Easy');\n  let [timeGameStarted, setTimeGameStarted] = useState(moment());\n  let [fastMode, setFastMode] = useState(false);\n  let [cellSelected, setCellSelected] = useState(-1);\n  let [initArray, setInitArray] = useState([]);\n  let [won, setWon] = useState(false);\n  return /*#__PURE__*/_jsxDEV(SudokuContext.Provider, {\n    value: {\n      numberSelected,\n      setNumberSelected,\n      gameArray,\n      setGameArray,\n      difficulty,\n      setDifficulty,\n      timeGameStarted,\n      setTimeGameStarted,\n      fastMode,\n      setFastMode,\n      cellSelected,\n      setCellSelected,\n      initArray,\n      setInitArray,\n      won,\n      setWon\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(SudokuProvider, \"LeChy+plM/wUW4A7is5wjjvm7z0=\");\n_c = SudokuProvider;\nexport const useSudokuContext = () => {\n  _s2();\n  return useContext(SudokuContext);\n};\n\n// Usage\n// const { numberSelected, setNumberSelected } = useNumberValue();\n_s2(useSudokuContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"SudokuProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","moment","SudokuContext","numberSelected","setNumberSelected","gameArray","setGameArray","difficulty","setDifficulty","timeGameStarted","setTimeGameStarted","fastMode","setFastMode","cellSelected","setCellSelected","initArray","setInitArray","won","setWon","SudokuProvider","children","useSudokuContext"],"sources":["/Users/robiokidenis/Projects/Game/sudoku-react/src/context/SudokuContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useState } from 'react';\nimport moment from 'moment';\n\ntype SudokuContextProps = {\n  numberSelected: string,\n  setNumberSelected: React.Dispatch<React.SetStateAction<string>>,\n  gameArray: string[],\n  setGameArray: React.Dispatch<React.SetStateAction<string[]>>,\n  difficulty: string,\n  setDifficulty: React.Dispatch<React.SetStateAction<string>>,\n  timeGameStarted: moment.Moment,\n  setTimeGameStarted: React.Dispatch<React.SetStateAction<moment.Moment>>,\n  fastMode: boolean,\n  setFastMode: React.Dispatch<React.SetStateAction<boolean>>,\n  cellSelected: number,\n  setCellSelected: React.Dispatch<React.SetStateAction<number>>,\n  initArray: string[],\n  setInitArray: React.Dispatch<React.SetStateAction<string[]>>,\n  won: boolean,\n  setWon: React.Dispatch<React.SetStateAction<boolean>>\n};\n\n\nconst SudokuContext = createContext<SudokuContextProps>({ numberSelected: '0', setNumberSelected: () => {},\n                                                          gameArray: [], setGameArray: () => {},\n                                                          difficulty: 'Easy', setDifficulty: () => {},\n                                                          timeGameStarted: moment(), setTimeGameStarted: () => {},\n                                                          fastMode: false, setFastMode: () => {},\n                                                          cellSelected: -1, setCellSelected: () => {},\n                                                          initArray: [], setInitArray: () => {},\n                                                          won: false, setWon: () => {} });\n\ntype SudokuProviderProps = {\n  children: React.ReactElement\n};\n\nexport const SudokuProvider = ({ children }: SudokuProviderProps) => {\n  let [ numberSelected, setNumberSelected ] = useState<string>('0');\n  let [ gameArray, setGameArray ] = useState<string[]>([]);\n  let [ difficulty,setDifficulty ] = useState<string>('Easy');\n  let [ timeGameStarted, setTimeGameStarted ] = useState<moment.Moment>(moment());\n  let [ fastMode, setFastMode ] = useState<boolean>(false);\n  let [ cellSelected, setCellSelected ] = useState<number>(-1);\n  let [ initArray, setInitArray ] = useState<string[]>([]);\n  let [ won, setWon ] = useState<boolean>(false);\n\n  return (\n    <SudokuContext.Provider value={\n      {\n        numberSelected, setNumberSelected,\n        gameArray, setGameArray,\n        difficulty,setDifficulty,\n        timeGameStarted, setTimeGameStarted,\n        fastMode, setFastMode,\n        cellSelected, setCellSelected,\n        initArray, setInitArray,\n        won, setWon\n      }\n    }>\n      {children}\n    </SudokuContext.Provider>\n  );\n};\n\nexport const useSudokuContext = (): SudokuContextProps => useContext(SudokuContext);\n\n// Usage\n// const { numberSelected, setNumberSelected } = useNumberValue();\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAClE,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAsB5B,MAAMC,aAAa,gBAAGJ,aAAa,CAAqB;EAAEK,cAAc,EAAE,GAAG;EAAEC,iBAAiB,EAAE,MAAM,CAAC,CAAC;EAChDC,SAAS,EAAE,EAAE;EAAEC,YAAY,EAAE,MAAM,CAAC,CAAC;EACrCC,UAAU,EAAE,MAAM;EAAEC,aAAa,EAAE,MAAM,CAAC,CAAC;EAC3CC,eAAe,EAAER,MAAM,EAAE;EAAES,kBAAkB,EAAE,MAAM,CAAC,CAAC;EACvDC,QAAQ,EAAE,KAAK;EAAEC,WAAW,EAAE,MAAM,CAAC,CAAC;EACtCC,YAAY,EAAE,CAAC,CAAC;EAAEC,eAAe,EAAE,MAAM,CAAC,CAAC;EAC3CC,SAAS,EAAE,EAAE;EAAEC,YAAY,EAAE,MAAM,CAAC,CAAC;EACrCC,GAAG,EAAE,KAAK;EAAEC,MAAM,EAAE,MAAM,CAAC;AAAE,CAAC,CAAC;AAMzF,OAAO,MAAMC,cAAc,GAAG,QAAuC;EAAA;EAAA,IAAtC;IAAEC;EAA8B,CAAC;EAC9D,IAAI,CAAEjB,cAAc,EAAEC,iBAAiB,CAAE,GAAGJ,QAAQ,CAAS,GAAG,CAAC;EACjE,IAAI,CAAEK,SAAS,EAAEC,YAAY,CAAE,GAAGN,QAAQ,CAAW,EAAE,CAAC;EACxD,IAAI,CAAEO,UAAU,EAACC,aAAa,CAAE,GAAGR,QAAQ,CAAS,MAAM,CAAC;EAC3D,IAAI,CAAES,eAAe,EAAEC,kBAAkB,CAAE,GAAGV,QAAQ,CAAgBC,MAAM,EAAE,CAAC;EAC/E,IAAI,CAAEU,QAAQ,EAAEC,WAAW,CAAE,GAAGZ,QAAQ,CAAU,KAAK,CAAC;EACxD,IAAI,CAAEa,YAAY,EAAEC,eAAe,CAAE,GAAGd,QAAQ,CAAS,CAAC,CAAC,CAAC;EAC5D,IAAI,CAAEe,SAAS,EAAEC,YAAY,CAAE,GAAGhB,QAAQ,CAAW,EAAE,CAAC;EACxD,IAAI,CAAEiB,GAAG,EAAEC,MAAM,CAAE,GAAGlB,QAAQ,CAAU,KAAK,CAAC;EAE9C,oBACE,QAAC,aAAa,CAAC,QAAQ;IAAC,KAAK,EAC3B;MACEG,cAAc;MAAEC,iBAAiB;MACjCC,SAAS;MAAEC,YAAY;MACvBC,UAAU;MAACC,aAAa;MACxBC,eAAe;MAAEC,kBAAkB;MACnCC,QAAQ;MAAEC,WAAW;MACrBC,YAAY;MAAEC,eAAe;MAC7BC,SAAS;MAAEC,YAAY;MACvBC,GAAG;MAAEC;IACP,CACD;IAAA,UACEE;EAAQ;IAAA;IAAA;IAAA;EAAA,QACc;AAE7B,CAAC;AAAC,GA1BWD,cAAc;AAAA,KAAdA,cAAc;AA4B3B,OAAO,MAAME,gBAAgB,GAAG;EAAA;EAAA,OAA0BtB,UAAU,CAACG,aAAa,CAAC;AAAA;;AAEnF;AACA;AAAA,IAHamB,gBAAgB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}