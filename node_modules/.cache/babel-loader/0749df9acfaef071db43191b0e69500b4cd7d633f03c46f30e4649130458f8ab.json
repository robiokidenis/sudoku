{"ast":null,"code":"var _jsxFileName = \"/Users/robiokidenis/Projects/Game/sudoku-react/src/components/Timer.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useSudokuContext } from \"../context/SudokuContext\";\nimport moment from \"moment\";\n\n/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Timer = () => {\n  _s();\n  let [currentTime, setCurrentTime] = useState(moment());\n  let [counterTime, setCounterTime] = useState(\"\");\n  let {\n    timeGameStarted,\n    won,\n    paused\n  } = useSudokuContext();\n  let totalSeconds = 0;\n  useEffect(() => {\n    if (!won) setTimeout(() => tick(), 1000);\n  });\n  function tick() {\n    // setCurrentTime(moment());\n    setCounterTime(countTimer());\n  }\n  function getTimer() {\n    let secondsTotal = currentTime.diff(timeGameStarted, \"seconds\");\n    if (secondsTotal <= 0) return \"00:00\";\n    let duration = moment.duration(secondsTotal, \"seconds\");\n    let hours = duration.hours();\n    let minutes = duration.minutes();\n    let seconds = duration.seconds();\n    let stringTimer = \"\";\n    stringTimer += hours ? \"\" + hours + \":\" : \"\";\n    stringTimer += minutes ? (minutes < 10 ? \"0\" : \"\") + minutes + \":\" : \"00:\";\n    stringTimer += seconds < 10 ? \"0\" + seconds : seconds;\n    return stringTimer;\n  }\n  function countTimer() {\n    ++totalSeconds;\n    var hours = Math.floor(totalSeconds / 3600);\n    var minutes = Math.floor((totalSeconds - hours * 3600) / 60);\n    var seconds = totalSeconds - (hours * 3600 + minutes * 60);\n    let stringTimer = \"\";\n    stringTimer += hours ? \"\" + hours + \":\" : \"\";\n    stringTimer += minutes ? (minutes < 10 ? \"0\" : \"\") + minutes + \":\" : \"00:\";\n    stringTimer += seconds < 10 ? \"0\" + seconds : seconds;\n    return stringTimer;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"status__time\",\n    children: counterTime\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_s(Timer, \"BqrBx0g4Y+S8seVSY0FbjWWKzwc=\", false, function () {\n  return [useSudokuContext];\n});\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["React","useState","useEffect","useSudokuContext","moment","Timer","currentTime","setCurrentTime","counterTime","setCounterTime","timeGameStarted","won","paused","totalSeconds","setTimeout","tick","countTimer","getTimer","secondsTotal","diff","duration","hours","minutes","seconds","stringTimer","Math","floor"],"sources":["/Users/robiokidenis/Projects/Game/sudoku-react/src/components/Timer.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSudokuContext } from \"../context/SudokuContext\";\nimport moment from \"moment\";\n\n/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */\nexport const Timer = () => {\n  let [currentTime, setCurrentTime] = useState(moment());\n  let [counterTime, setCounterTime] = useState(\"\");\n  let { timeGameStarted, won, paused } = useSudokuContext();\n  let totalSeconds: number = 0;\n  useEffect(() => {\n    if (!won ) setTimeout(() => tick(), 1000);\n  });\n\n  function tick() {\n    // setCurrentTime(moment());\n    setCounterTime(countTimer());\n  }\n\n  function getTimer() {\n    let secondsTotal = currentTime.diff(timeGameStarted, \"seconds\");\n    if (secondsTotal <= 0) return \"00:00\";\n    let duration = moment.duration(secondsTotal, \"seconds\");\n    let hours = duration.hours();\n    let minutes = duration.minutes();\n    let seconds = duration.seconds();\n    let stringTimer = \"\";\n\n    stringTimer += hours ? \"\" + hours + \":\" : \"\";\n    stringTimer += minutes ? (minutes < 10 ? \"0\" : \"\") + minutes + \":\" : \"00:\";\n    stringTimer += seconds < 10 ? \"0\" + seconds : seconds;\n\n    return stringTimer;\n  }\n\n  function countTimer() {\n    ++totalSeconds;\n    var hours = Math.floor(totalSeconds / 3600);\n    var minutes = Math.floor((totalSeconds - hours * 3600) / 60);\n    var seconds = totalSeconds - (hours * 3600 + minutes * 60);\n    let stringTimer = \"\";\n\n    stringTimer += hours ? \"\" + hours + \":\" : \"\";\n    stringTimer += minutes ? (minutes < 10 ? \"0\" : \"\") + minutes + \":\" : \"00:\";\n    stringTimer += seconds < 10 ? \"0\" + seconds : seconds;\n\n    return stringTimer;\n  }\n\n  return <div className=\"status__time\">{counterTime}</div>;\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,gBAAgB,QAAQ,0BAA0B;AAC3D,OAAOC,MAAM,MAAM,QAAQ;;AAE3B;AACA;AACA;AACA;AAHA;AAIA,OAAO,MAAMC,KAAK,GAAG,MAAM;EAAA;EACzB,IAAI,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAACG,MAAM,EAAE,CAAC;EACtD,IAAI,CAACI,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAChD,IAAI;IAAES,eAAe;IAAEC,GAAG;IAAEC;EAAO,CAAC,GAAGT,gBAAgB,EAAE;EACzD,IAAIU,YAAoB,GAAG,CAAC;EAC5BX,SAAS,CAAC,MAAM;IACd,IAAI,CAACS,GAAG,EAAGG,UAAU,CAAC,MAAMC,IAAI,EAAE,EAAE,IAAI,CAAC;EAC3C,CAAC,CAAC;EAEF,SAASA,IAAI,GAAG;IACd;IACAN,cAAc,CAACO,UAAU,EAAE,CAAC;EAC9B;EAEA,SAASC,QAAQ,GAAG;IAClB,IAAIC,YAAY,GAAGZ,WAAW,CAACa,IAAI,CAACT,eAAe,EAAE,SAAS,CAAC;IAC/D,IAAIQ,YAAY,IAAI,CAAC,EAAE,OAAO,OAAO;IACrC,IAAIE,QAAQ,GAAGhB,MAAM,CAACgB,QAAQ,CAACF,YAAY,EAAE,SAAS,CAAC;IACvD,IAAIG,KAAK,GAAGD,QAAQ,CAACC,KAAK,EAAE;IAC5B,IAAIC,OAAO,GAAGF,QAAQ,CAACE,OAAO,EAAE;IAChC,IAAIC,OAAO,GAAGH,QAAQ,CAACG,OAAO,EAAE;IAChC,IAAIC,WAAW,GAAG,EAAE;IAEpBA,WAAW,IAAIH,KAAK,GAAG,EAAE,GAAGA,KAAK,GAAG,GAAG,GAAG,EAAE;IAC5CG,WAAW,IAAIF,OAAO,GAAG,CAACA,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,OAAO,GAAG,GAAG,GAAG,KAAK;IAC1EE,WAAW,IAAID,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO;IAErD,OAAOC,WAAW;EACpB;EAEA,SAASR,UAAU,GAAG;IACpB,EAAEH,YAAY;IACd,IAAIQ,KAAK,GAAGI,IAAI,CAACC,KAAK,CAACb,YAAY,GAAG,IAAI,CAAC;IAC3C,IAAIS,OAAO,GAAGG,IAAI,CAACC,KAAK,CAAC,CAACb,YAAY,GAAGQ,KAAK,GAAG,IAAI,IAAI,EAAE,CAAC;IAC5D,IAAIE,OAAO,GAAGV,YAAY,IAAIQ,KAAK,GAAG,IAAI,GAAGC,OAAO,GAAG,EAAE,CAAC;IAC1D,IAAIE,WAAW,GAAG,EAAE;IAEpBA,WAAW,IAAIH,KAAK,GAAG,EAAE,GAAGA,KAAK,GAAG,GAAG,GAAG,EAAE;IAC5CG,WAAW,IAAIF,OAAO,GAAG,CAACA,OAAO,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,IAAIA,OAAO,GAAG,GAAG,GAAG,KAAK;IAC1EE,WAAW,IAAID,OAAO,GAAG,EAAE,GAAG,GAAG,GAAGA,OAAO,GAAGA,OAAO;IAErD,OAAOC,WAAW;EACpB;EAEA,oBAAO;IAAK,SAAS,EAAC,cAAc;IAAA,UAAEhB;EAAW;IAAA;IAAA;IAAA;EAAA,QAAO;AAC1D,CAAC;AAAC,GA7CWH,KAAK;EAAA,QAGuBF,gBAAgB;AAAA;AAAA,KAH5CE,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}