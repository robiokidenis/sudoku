{"ast":null,"code":"import _slicedToArray from\"/Users/robiokidenis/Projects/Game/sudoku-react/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from\"react\";import{useSudokuContext}from\"../context/SudokuContext\";import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */export var Timer=function Timer(){var _useState=useState(0),_useState2=_slicedToArray(_useState,2),counterTime=_useState2[0],setCounterTime=_useState2[1];var _useSudokuContext=useSudokuContext(),timeGameStarted=_useSudokuContext.timeGameStarted,won=_useSudokuContext.won,paused=_useSudokuContext.paused;useEffect(function(){if(!paused&&!won)setTimeout(function(){return tick();},1000);});function tick(){setCounterTime(counterTime+1);}function formatTime(num){var stringTimer=\"\";var hours=Math.floor(num/3600);var minutes=Math.floor((num-hours*3600)/60);var seconds=counterTime-(hours*3600+minutes*60);stringTimer+=hours?\"\"+hours+\":\":\"\";stringTimer+=minutes?(minutes<10?\"0\":\"\")+minutes+\":\":\"00:\";stringTimer+=seconds<10?\"0\"+seconds:seconds;return stringTimer;}return/*#__PURE__*/_jsx(\"div\",{className:\"status__time\",children:formatTime(counterTime)});};","map":{"version":3,"names":["React","useState","useEffect","useSudokuContext","Timer","counterTime","setCounterTime","timeGameStarted","won","paused","setTimeout","tick","formatTime","num","stringTimer","hours","Math","floor","minutes","seconds"],"sources":["/Users/robiokidenis/Projects/Game/sudoku-react/src/components/Timer.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useSudokuContext } from \"../context/SudokuContext\";\nimport moment from \"moment\";\n\n/**\n * React component for the Timer in Status Section.\n * Uses the 'useEffect' hook to update the timer every minute.\n */\nexport const Timer = () => {\n  let [counterTime, setCounterTime] = useState(0);\n  let { timeGameStarted, won, paused } = useSudokuContext();\n\n  useEffect(() => {\n    if  (!paused && !won ) setTimeout(() => tick(), 1000);\n  });\n\n  function tick() {\n    setCounterTime(counterTime + 1);\n  }\n\n  function formatTime(num: any): string {\n    let stringTimer = \"\";\n    var hours = Math.floor(num / 3600);\n    var minutes = Math.floor((num - hours * 3600) / 60);\n    var seconds = counterTime - (hours * 3600 + minutes * 60);\n    stringTimer += hours ? \"\" + hours + \":\" : \"\";\n    stringTimer += minutes ? (minutes < 10 ? \"0\" : \"\") + minutes + \":\" : \"00:\";\n    stringTimer += seconds < 10 ? \"0\" + seconds : seconds;\n    return stringTimer;\n  }\n\n  return <div className=\"status__time\">{formatTime(counterTime)}</div>;\n};\n"],"mappings":"oIAAA,MAAOA,MAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,gBAAgB,KAAQ,0BAA0B,CAAC,2CAG5D;AACA;AACA;AACA,GACA,MAAO,IAAMC,MAAK,CAAG,QAARA,MAAK,EAAS,CACzB,cAAoCH,QAAQ,CAAC,CAAC,CAAC,wCAA1CI,WAAW,eAAEC,cAAc,eAChC,sBAAuCH,gBAAgB,EAAE,CAAnDI,eAAe,mBAAfA,eAAe,CAAEC,GAAG,mBAAHA,GAAG,CAAEC,MAAM,mBAANA,MAAM,CAElCP,SAAS,CAAC,UAAM,CACd,GAAK,CAACO,MAAM,EAAI,CAACD,GAAG,CAAGE,UAAU,CAAC,iBAAMC,KAAI,EAAE,GAAE,IAAI,CAAC,CACvD,CAAC,CAAC,CAEF,QAASA,KAAI,EAAG,CACdL,cAAc,CAACD,WAAW,CAAG,CAAC,CAAC,CACjC,CAEA,QAASO,WAAU,CAACC,GAAQ,CAAU,CACpC,GAAIC,YAAW,CAAG,EAAE,CACpB,GAAIC,MAAK,CAAGC,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAG,IAAI,CAAC,CAClC,GAAIK,QAAO,CAAGF,IAAI,CAACC,KAAK,CAAC,CAACJ,GAAG,CAAGE,KAAK,CAAG,IAAI,EAAI,EAAE,CAAC,CACnD,GAAII,QAAO,CAAGd,WAAW,EAAIU,KAAK,CAAG,IAAI,CAAGG,OAAO,CAAG,EAAE,CAAC,CACzDJ,WAAW,EAAIC,KAAK,CAAG,EAAE,CAAGA,KAAK,CAAG,GAAG,CAAG,EAAE,CAC5CD,WAAW,EAAII,OAAO,CAAG,CAACA,OAAO,CAAG,EAAE,CAAG,GAAG,CAAG,EAAE,EAAIA,OAAO,CAAG,GAAG,CAAG,KAAK,CAC1EJ,WAAW,EAAIK,OAAO,CAAG,EAAE,CAAG,GAAG,CAAGA,OAAO,CAAGA,OAAO,CACrD,MAAOL,YAAW,CACpB,CAEA,mBAAO,YAAK,SAAS,CAAC,cAAc,UAAEF,UAAU,CAACP,WAAW,CAAC,EAAO,CACtE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}